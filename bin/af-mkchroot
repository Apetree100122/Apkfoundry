#!/usr/bin/env python3
# SPDX-License-Identifier: GPL-2.0-only
# Copyright (c) 2019-2020 Max Rees
# See LICENSE for more information.
import argparse # ArgumentParser, REMAINDER
import logging  # basicConfig
import sys      # exit
from pathlib import Path

from apkfoundry import get_branch, local_conf
from apkfoundry.container import cont_make
from apkfoundry.socket import client_init

logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s %(levelname)s %(message)s",
)

opts = argparse.ArgumentParser(
    usage="af-mkchroot [options ...] DIR APORTSDIR",
)
opts.add_argument(
    "-A", "--arch",
    help="APK architecture name (default: output of apk --print-arch)",
)
opts.add_argument(
    "-c", "--cache",
    help="shared APK cache directory (default: disabled)",
)
opts.add_argument(
    "-r", "--repodest",
    help="package destination directory (default: container root /af/repos)",
)
opts.add_argument(
    "-S", "--setarch",
    help="setarch(8) architecture name (default: none)",
)
opts.add_argument(
    "-s", "--srcdest",
    help="source file directory (default: container root /var/cache/distfiles)",
)
opts.add_argument(
    "cdir", metavar="DIR",
    help="container directory",
)
opts.add_argument(
    "aportsdir", metavar="APORTSDIR",
    help="project checkout directory",
)

opts = opts.parse_args()
opts.cdir = Path(opts.cdir).resolve(strict=False)

branch = get_branch(opts.aportsdir)
conf = local_conf(opts.aportsdir, branch)

cont_make(
    opts.cdir,
    branch,
    conf["bootstrap_repo"],
    arch=opts.arch,
    setarch=opts.setarch,
    mounts={
        "aportsdir": opts.aportsdir,
        "repodest": opts.repodest,
        "srcdest": opts.srcdest,
    },
    cache=opts.cache,
)

rc, _ = client_init(opts.cdir, bootstrap=True)
sys.exit(rc)
